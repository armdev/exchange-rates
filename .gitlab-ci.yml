image: docker:latest

stages:
  #- connect
  - build
  - deploy
  - deliver

services:
  #- mysql:latest
  - docker:dind
  
# variables:
#   # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
#   MYSQL_DATABASE: root
#   MYSQL_ROOT_PASSWORD: root
#   DATABASE_URL: "jdbc:mysql://localhost:3306/rates"
  
cache:
  key: ${CI_BUILD_NAME}
  paths:
   - rates-backend/
   - rates-web/

mysql_build:
  stage: build
  variables:
    MYSQL_DATABASE: rates
    MYSQL_ROOT_PASSWORD: root
  services:
  - mysql:latest
  image: mysql
  before_script:
  - mysql --version
  script:
  - echo "SELECT 'OK';" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql "${MYSQL_DATABASE}"
  - "mysql --user=root --password=root rates < db/rates_db.sql"
   
# docker-build:
#   stage: build
#   image: docker
#   script:
#   - "docker run --name rates-mysql -p 3306-3306:3306-3306 -e MYSQL_ROOT_PASSWORD=root -d mysql"
#   - "chmod 777 /var/run/mysqld/mysqld.sock"
#   - "docker exec -i rates-mysql mysql -uroot -proot -e 'create database rates'"
#   - "docker exec -i rates-mysql mysql -uroot -proot rates < db/rates_db.sql"

maven-build:
  image: maven:3.3.9-jdk-8
  stage: build
  script:
    - "mvn clean package -B -Dmaven.test.skip=false"
    - "ls -al"  
  artifacts:
        paths:
        - "rates-backend/target/rates-backend-1.0-SNAPSHOT.jar"      
  allow_failure: false
  
   
# connect:
#   image: mysql
#   script:
#     - echo "create database rates" | mysql -u root username -p root


deploy:
  stage: deploy
  script: "echo Deploy started"
  only:
    - master

deliver:
  stage: deliver
  script: "echo Delivery started"
  only:
    - master
 